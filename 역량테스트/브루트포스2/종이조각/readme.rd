문제 사이트 : https://www.acmicpc.net/problem/14391

문제 설명 : 

영선이는 숫자가 쓰여 있는 직사각형 종이를 가지고 있다. 종이는 1×1 크기의 정사각형 칸으로 나누어져 있고, 숫자는 각 칸에 하나씩 쓰여 있다. 행은 위에서부터 아래까지 번호가 매겨져 있고, 열은 왼쪽부터 오른쪽까지 번호가 매겨져 있다.

영선이는 직사각형을 겹치지 않는 조각으로 자르려고 한다. 각 조각은 크기가 세로나 가로 크기가 1인 직사각형 모양이다. 길이가 N인 조각은 N자리 수로 나타낼 수 있다. 가로 조각은 왼쪽부터 오른쪽까지 수를 이어 붙인 것이고, 세로 조각은 위에서부터 아래까지 수를 이어붙인 것이다.

아래 그림은 4×4 크기의 종이를 자른 한 가지 방법이다.



각 조각의 합은 493 + 7160 + 23 + 58 + 9 + 45 + 91 = 7879 이다.

종이를 적절히 잘라서 조각의 합을 최대로 하는 프로그램을 작성하시오.

입력
첫째 줄에 종이 조각의 세로 크기 N과 가로 크기 M이 주어진다. (1 ≤ N, M ≤ 4)

둘째 줄부터 종이 조각이 주어진다. 각 칸에 쓰여 있는 숫자는 0부터 9까지 중 하나이다.

문제 입/출력

예제 입력 1
2 3
123
312
예제 출력 1 
435

코드 및 설명 :

#include <iostream>
#include <string>
using namespace std;
 
int n, m;
int paper[4][4];
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
 
    cin >> n >> m;
    string s;
 
    for (int i = 0; i < n; i++) {
        cin >> s;
        for (int j = 0; j < m; j++) {
            paper[i][j] = s[j] - '0';
        }
    }
 
    int ans = 0;
 
    //모든 경우 구한다.
    //0인 곳은 가로, 1인 곳은 세로
    for (int b = 0; b < (1 << (n*m)); b++) {
        int sum = 0;
 
 
        //가로모양으로 자른 애들 계산
        for (int i = 0; i < n; i++) {
            
            int now = 0;
            for (int j = 0; j < m; j++) {
                
 
                //정사각형 종이 조각을 한줄로 이어 붙였을 때의 인덱스
                int k = i*m + j;
 
                //k번째 자리값이 0이다(가로로 자를거다)                
                if ((b & (1 << k)) == 0) {
                    now = now * 10 + paper[i][j];
                }
                else { //1인 경우(세로인 경우) 앞에까지 만들어진 조각을 sum에 더해준다.
                    sum += now;
                    now = 0;
                }
            }
 
            //한 행이 끝났으면 만들어진 숫자 sum에 더해준다.
            sum += now;
        }
 
 
 
        //세로 모양으로 자른 애들 계산
        for (int j = 0; j < m; j++) {
 
            int now = 0;
            for (int i = 0; i < n; i++) {
 
                //정사각형 종이 조각을 한줄로 이어 붙였을 때의 인덱스
                int k = i*m + j;
 
                //세로인 경우에 숫자를 만들어준다.
                if ((b & (1 << k)) != 0) {
                    now = now * 10 + paper[i][j];
                }
                else {
                    sum += now;
                    now = 0;
                }
            }
 
            sum += now;
        }
        
 
        //최댓값과 비교
        if (ans < sum) ans = sum;
 
    }
 
    cout << ans << '\n';
 
    return 0;
}
