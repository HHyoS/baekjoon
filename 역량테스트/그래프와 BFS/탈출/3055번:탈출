#include <iostream>
#include <vector>
#include <queue>

using namespace std;
char map[51][51];
bool check[51][51];

int main(void) {
    int n, m;
    pair<int,int> goal;
    pair<int, int> go;
    queue<pair<int, int>> que;
    queue<pair<int, int>> qu;
   // freopen("input.txt", "r", stdin);
    int xy[4][2] = { {0,1},{0,-1},{1,0},{-1,0} };
    scanf("%d%d", &n, &m);
    for (int a = 1; a <= n; ++a) {
        for (int b = 1; b <= m; ++b) {
            scanf("%c", map[a][b]);
            if (map[a][b] == 'D') {
                goal = { a,b };
            }
            else if (map[a][b] == 'S') {
                go = { a,b };
                map[a][b] = '.';
            }
            else if (map[a][b] == '*') {
                que.push({ a,b });
            }
        }
    }
    int count = 1;
    while (!que.empty()) {
        int size = que.size();
        for (int a = 0; a < size; ++a) {
            pair<int, int> s = que.front();
            que.pop();
            for (int b = 0; b < 4; ++b) {
                if ((s.first + xy[b][0] >= 1) && (s.first + xy[b][0] <= n)
                    && s.second + xy[b][1] >= 1 && s.second + xy[b][1] <= m
                    && map[s.first + xy[b][0]][s.second + xy[b][1]] == '.') {
                    map[s.first + xy[b][0]][s.second + xy[b][1]] = '*';
                    que.push({ s.first + xy[b][0],s.second + xy[b][1] });
                }
        }
            size = qu.size();
            for(int a =0; a < size; ++a){
                pair<int, int> s = qu.front();
                qu.pop();
                for (int b = 0; b < 4; ++b) {
                    if ((s.first + xy[b][0] >= 1) && (s.first + xy[b][0] <= n)
                        && s.second + xy[b][1] >= 1 && s.second + xy[b][1] <= m
                        && map[s.first + xy[b][0]][s.second + xy[b][1]] == '.') {
                        qu.push({ s.first + xy[b][0],s.second + xy[b][1]});
                    }
                }
    }
    return 0;

}


